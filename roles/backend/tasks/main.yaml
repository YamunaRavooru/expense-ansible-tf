  - name: Disable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name:  Enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: Install nodejs 
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - mysql
    - nodejs 
  - name: Create expense user
    ansible.builtin.user:
      name: expense
  # - name: creat app directory
  #   ansible.builtin.file:
  #     path: /app
  #     state: directory
  # - name: Download backend code
  #   ansible.builtin.get_url:
  #     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #     dest: /tmp/backend.zip

  # - name: unzip backend code
  #   ansible.builtin.unarchive:
  #     src: /tmp/backend.zip
  #     dest: /app
  #     remote_src: yes
  - name: include from common roles
    # tags:
    # - deployment
    include_role:
      name: common
      tasks_from: main
  - name: Install dependencies
    community.general.npm:
      path: /app
  - name: install libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - PyMySQL
    - cryptography

  - name: copy backend service
    ansible.builtin.template:
      src: backend.service.j2
      dest: /etc/systemd/system/backend.service
  - name: daemon reload and restart service
    tags:
    - deployment
    ansible.builtin.systemd_service:
      name: backend
      state: restarted
      daemon_reload: true
      enabled: true
 
        
  - name: import mysql data
    tags: 
    - deployment
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: "{{ mysql_user }}"
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ mysql_host }}"
      target: /app/schema/backend.sql
  # - name: daemon reload and restart service
  #   tags: 
  #   - deployment
  #   ansible.builtin.systemd_service:
  #     enabled: true
  #     state: restarted
  #     daemon_reload: true
  #     name: backend